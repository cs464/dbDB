	The dating database is a web application for efficiently managing social interactions.  The user can keep track of who they are dating, important facts about their dates, and contact information.  They can also view dates based on calendar date and time.
	We made the administrator's console, which has a different view of the database than a user would experience.  The administrator has privileges to view the entire database.
	The interface is centered around web pages with a navigation bar at the top.  The navigation bar is present at the top of every page, and contains a set of links that lead to a top-level view of each table in the database.  Tuples are returned into HTML tables, with 10 to a page.  The final column of each table contains buttons to edit or delete a tuple.  When the delete button is clicked, the user is asked to confirm the deletion.  When the edit button is clicked, a new page is generated with text boxes to alter the values of the table.  Some tables have buttons for complicated queries.  For example, you can click to see the most popular locations for dates in the past month.  The HTML for each page is dynamically generated by its respective rails view file.  These are located in the folder dbDB/cs464_project/ruby/rails/DDFDB/app/views.
	Rails uses a Model-View-Controller architecture. Models map to a corres\
ponding table in the database (cs464_project/ruby/rails/DDFDB/app/models/). Vie\
ws are .erb files that are converted to HTML at run-time (cs464_project/ruby/ra\
ils/DDFDB/app/views/). Controllers respond to server requests by performing (RE\
STful) actions and determining which view file to render (cs464_project/ruby/ra\
ils/DDFDB/app/controllers/).
      So users interact with Views and the Controller has a method for each vie\
w that interfaces their actions to the Model representation of the database. Ea\
ch of our relations â€“ User, Pursuing, Person, Interaction, Communication, Info,\
 Interest - has a single ruby class (of the same name) as Model, a single ruby \
class as Controller, and a collection of Views corresponding to each HTML page \
a user might see when interacting with that relation or one of its tuples (i.e.\
 adding, viewing, editing, deleting, etc.).

